{"encoding": "base64", "content": "aW1wb3J0IHsgZGIgfSBmcm9tICcuLi9maXJlYmFzZUNvbmZpZyc7CmltcG9ydCB7IGNvbGxlY3Rpb24sIGFkZERvYywgZ2V0RG9jcywgcXVlcnksIHdoZXJlIH0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJzsKaW1wb3J0IHsgTUxUcmFpbmluZ0RhdGEsIE1hY2hpbmVMZWFybmluZ1NlcnZpY2UgfSBmcm9tICcuL01hY2hpbmVMZWFybmluZ1NlcnZpY2UnOwoKZXhwb3J0IGludGVyZmFjZSBRdWFydGVyVGVtcGxhdGUgewogIG5hbWU6IHN0cmluZzsKICBkaWZmaWN1bHR5OiAnZWFzeScgfCAnbWVkaXVtJyB8ICdoYXJkJzsKICBzYW1wbGVzOiB7CiAgICBhZ2U6IG51bWJlcjsKICAgIHByb29mOiBudW1iZXI7CiAgICBtYXNoYmlsbFR5cGU6IHN0cmluZzsKICB9W107CiAgcmVjb21tZW5kZWRQbGF5ZXJMZXZlbDogbnVtYmVyOwp9CgpleHBvcnQgY2xhc3MgUXVhcnRlclRlbXBsYXRlU2VydmljZSB7CiAgcHJpdmF0ZSB0ZW1wbGF0ZXNDb2xsZWN0aW9uID0gY29sbGVjdGlvbihkYiwgJ3F1YXJ0ZXJfdGVtcGxhdGVzJyk7CiAgcHJpdmF0ZSBtbFNlcnZpY2UgPSBuZXcgTWFjaGluZUxlYXJuaW5nU2VydmljZSgpOwoKICBhc3luYyBnZW5lcmF0ZVRlbXBsYXRlKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTxRdWFydGVyVGVtcGxhdGU+IHsKICAgIHRyeSB7CiAgICAgIC8vIEdldCB1c2VyJ3MgbGVhcm5pbmcgcHJvZmlsZQogICAgICBjb25zdCBsZWFybmluZ1Byb2ZpbGUgPSBhd2FpdCB0aGlzLm1sU2VydmljZS5nZW5lcmF0ZUxlYXJuaW5nUHJvZmlsZSh1c2VySWQpOwoKICAgICAgLy8gRGV0ZXJtaW5lIGRpZmZpY3VsdHkgYmFzZWQgb24gcGVyZm9ybWFuY2UKICAgICAgY29uc3QgZGlmZmljdWx0eSA9IHRoaXMuY2FsY3VsYXRlRGlmZmljdWx0eShsZWFybmluZ1Byb2ZpbGUuYXZlcmFnZVBlcmZvcm1hbmNlKTsKCiAgICAgIC8vIEdlbmVyYXRlIHNhbXBsZXMgYmFzZWQgb24gZGlmZmljdWx0eQogICAgICBjb25zdCBzYW1wbGVzID0gdGhpcy5nZW5lcmF0ZVNhbXBsZXMoZGlmZmljdWx0eSk7CgogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6IGBRJHtuZXcgRGF0ZSgpLmdldE1vbnRoKCkgKyAxfSAke25ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKX1gLAogICAgICAgIGRpZmZpY3VsdHksCiAgICAgICAgc2FtcGxlcywKICAgICAgICByZWNvbW1lbmRlZFBsYXllckxldmVsOiBNYXRoLmZsb29yKGxlYXJuaW5nUHJvZmlsZS5hdmVyYWdlUGVyZm9ybWFuY2UgLyAyMCkKICAgICAgfTsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBnZW5lcmF0ZSB0ZW1wbGF0ZScsIGVycm9yKTsKICAgICAgcmV0dXJuIHRoaXMuZ2V0RGVmYXVsdFRlbXBsYXRlKCk7CiAgICB9CiAgfQoKICBwcml2YXRlIGNhbGN1bGF0ZURpZmZpY3VsdHkocGVyZm9ybWFuY2U6IG51bWJlcik6IFF1YXJ0ZXJUZW1wbGF0ZVsnZGlmZmljdWx0eSddIHsKICAgIGlmIChwZXJmb3JtYW5jZSA8IDUwKSByZXR1cm4gJ2Vhc3knOwogICAgaWYgKHBlcmZvcm1hbmNlIDwgODApIHJldHVybiAnbWVkaXVtJzsKICAgIHJldHVybiAnaGFyZCc7CiAgfQoKICBwcml2YXRlIGdlbmVyYXRlU2FtcGxlcyhkaWZmaWN1bHR5OiBRdWFydGVyVGVtcGxhdGVbJ2RpZmZpY3VsdHknXSkgewogICAgLy8gQmFzZSBkaWZmaWN1bHR5IG1vZGlmaWVycwogICAgY29uc3QgZGlmZk1vZCA9IHsKICAgICAgJ2Vhc3knOiB7IGFnZTogMiwgcHJvb2Y6IDEwIH0sCiAgICAgICdtZWRpdW0nOiB7IGFnZTogNCwgcHJvb2Y6IDIwIH0sCiAgICAgICdoYXJkJzogeyBhZ2U6IDgsIHByb29mOiA0MCB9CiAgICB9W2RpZmZpY3VsdHldOwoKICAgIC8vIEdlbmVyYXRlIGZvdXIgZGlzdGluY3Qgc2FtcGxlcwogICAgY29uc3QgbWFzaGJpbGxzID0gWydCb3VyYm9uJywgJ1J5ZScsICdXaGVhdCcsICdTaW5nbGUgTWFsdCcsICdTcGVjaWFsdHknXTsKICAgIGNvbnN0IHNhbXBsZXMgPSBbXTsKCiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykgewogICAgICBzYW1wbGVzLnB1c2goewogICAgICAgIGFnZTogTWF0aC5tYXgoNCwgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTIpICsgZGlmZk1vZC5hZ2UpLAogICAgICAgIHByb29mOiBNYXRoLm1heCg4MCwgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNDApICsgODAgKyBkaWZmTW9kLnByb29mKSwKICAgICAgICBtYXNoYmlsbFR5cGU6IG1hc2hiaWxsc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBtYXNoYmlsbHMubGVuZ3RoKV0KICAgICAgfSk7CiAgICB9CgogICAgcmV0dXJuIHNhbXBsZXM7CiAgfQoKICBwcml2YXRlIGdldERlZmF1bHRUZW1wbGF0ZSgpOiBRdWFydGVyVGVtcGxhdGUgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogYFEke25ldyBEYXRlKCkuZ2V0TW9udGgoKSArIDF9ICR7bmV3IERhdGUoKS5nZXRGdWxsWWVhcigpfWAsCiAgICAgIGRpZmZpY3VsdHk6ICdtZWRpdW0nLAogICAgICBzYW1wbGVzOiB0aGlzLmdlbmVyYXRlU2FtcGxlcygnbWVkaXVtJyksCiAgICAgIHJlY29tbWVuZGVkUGxheWVyTGV2ZWw6IDEKICAgIH07CiAgfQp9"}
